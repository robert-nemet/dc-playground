version: "3.9"

services:
  vegeta:
    container_name: vegeta
    image: peterevans/vegeta
    volumes:
    - ./vegeta:/vegeta
    command: vegeta attack --targets=/vegeta/targets.tests -duration=5m -output /vegeta/output
    profiles:
      - observer
      - all

  app:
    container_name: echo
    build: .
    ports:
      - 9999:9999
    volumes:
      - ./configs:/app/configs
    depends_on:
      - liquibase_pg
    restart: always
    profiles:
      - observer
      - all

  beta:
    container_name: beta
    build: .
    ports:
      - 8888:8888
    volumes:
      - ./beta:/app/configs
    depends_on:
      - liquibase_pg
    restart: always
    profiles:
      - observer
      - all


  liquibase_pg:
    container_name: pg_updater
    image: liquibase/liquibase:4.7.0
    volumes:
      - ./liquibase:/liquibase/changelog
    command: liquibase --url="jdbc:postgresql://pg:5432/docker" --changeLogFile=./changelog/changelog.xml --username=root --password=password update
    depends_on:
      - pg
    profiles:
      - observer
      - all

  pg:
    container_name: pg
    image: postgres:13.1
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: docker
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    profiles:
      - observer
      - all
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - 9100
    profiles:
      - all
      - observer

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8090:8080
    profiles:
      - all
      - observer

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    profiles:
      - all
      - observer

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/source/dashboards:/etc/dashboards
    profiles:
      - all
      - observer
      
volumes:
  prom_data:
